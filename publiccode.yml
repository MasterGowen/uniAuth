# This repository adheres to the publiccode.yml standard by including this
# metadata file that makes public software easily discoverable.
# More info at https://github.com/italia/publiccode.yml

publiccodeYmlVersion: '1.0-rc'
name: uniAuth
releaseDate: '2019-02-05'
url: 'https://github.com/UniversitaDellaCalabria/uniAuth'
landingURL: 'https://github.com/UniversitaDellaCalabria/uniAuth'
developmentStatus: stable
softwareType: standalone/web
roadmap: 'https://github.com/UniversitaDellaCalabria/uniAuth/issues'
platforms:
  - linux
  - web
usedBy:
  - 'https://www.unical.it'
categories:
  - identity-management
maintenance:
  type: internal
  contacts:
    - name: Giuseppe De Marco
      email: giuseppe.demarco@unical.it
      affiliation: unical.it
    - name: Francesco Filicetti
      email: francesco.filicetti@unical.it
      affiliation: unical.it
legal:
  license: Apache-2.0
  mainCopyrightOwner: Universit√† della Calabria
  authorsFile: AUTHORS
intendedAudience:
  scope:
    - employment
localisation:
  localisationReady: false
  availableLanguages:
    - it
dependsOn:
  open:
    - name: MariaDB
    - name: Python
it:
  countryExtensionVersion: '0.2'
  conforme:
    gdpr: true
    misureMinimeSicurezza: true
  riuso:
    codiceIPA: unical
description:
  it:
    features:
        - Full Internazionalization support (i18n);
        - Interactive Metadata Store definitions through the Admin Backend UI;
        - Interactive ServiceProvider Federation through the Admin Backend UI;
        - Customizable Template and style based on `AGID guidelines <https://www.agid.gov.it/it/argomenti/linee-guida-design-pa>`__;
        - MetadataStore and SP validations on save, to prevent faulty configurations in production environment;
        - Optional and quite granular Agreement Screen;
        - Many configurable options, for every SP we can decide:
            - signature and digest algorithms;
            - attributes release policies;
            - attribute rewrite and creation, fully configurable AttributeProcessors per SP, every aspect of attribute release can be customized from schratch;
            - selectable hashing algorithm for Computed NameID;
            - agreement screen message, availability, data consent form.
        - Configurable log rotation through uwsgi;
        - Importable StoredPersistentID for each user, for migrations from other IDP;
        - An LDAP web manager with a configurable app (`ldap_peoples`);
        - Multifactor support, as available in djangosaml2idp;
        - Detailed but not huge logs.
    screenshots:
      - >-
        https://github.com/UniversitaDellaCalabria/uniAuth/blob/master/documentation/contents/login.png
      - >-
        https://github.com/UniversitaDellaCalabria/uniAuth/blob/master/documentation/contents/agreement.png
      - >-
        https://github.com/UniversitaDellaCalabria/uniAuth/blob/master/documentation/contents/serviceprovider.rst
    documentation: 'https://uniauth.readthedocs.io/'
    genericName: applicazione web
    shortDescription: Identity Provider per la gestione del SingleSignOn
    longDescription: >
      uniAuth would let simple users to do an applicative administration
      of the platform, create new metadata store and federate new
      Service Provider, without handle high sysadmin tasks.


      uniAuth, as a SAML2 IDP, is based on pysaml2 and it supports:

      - HTTP-REDIRECT and POST bindings;
      - AuthnRequest with or without ForceAuthn;
      - SLO, SAML Single Logout;
      - Encrypted assertions, customizable sign/digest algorithms and, in general, it presents a good posture in terms of security regarding SAML standards.
      - uniAuth do not support AllowCreate NameIDPolicy, this behaviour is completely demanded to uniAuth AttributeProcessors.
